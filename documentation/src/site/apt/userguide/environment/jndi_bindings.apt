 -----
 Kalumet Console Environment JNDI Bindings
 -----
 -----
 -----

~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

Apache Kalumet Console Environment JNDI Bindings

  In the environment JEE resources tab, you have a "NameSpace Bindings" tab.

  This tab allows you to configure the JNDI aliases that will be deployed in the JEE application server given in the "scope" checkbox.

[/images/env_bindings.png]

  On each binding, you can:

  * copy the JNDI binding to be pasted into another binding

  * enable (light on) or disable (light off) the JNDI binding. If disabled, the JNDI binding won't be part of the update process.

  * set update blocker (green puzzle piece) or not update blocker (grey puzzle piece)

  * check the current status of the JNDI binding (if deployed and up to date in the JEE application server)

  * launch the JNDI binding update

  * validate a change on the JNDI binding configuration

  * delete the JNDI binding

  To add a new JNDI binding, you have to provide:

  * a name, which is just an identifiant for the JNDI binding

  * the "original" JNDI name

  * the JNDI alias name

  * a provider URL (if required), it allows you to bind two different JNDI providers (on different JEE application servers for instance)
