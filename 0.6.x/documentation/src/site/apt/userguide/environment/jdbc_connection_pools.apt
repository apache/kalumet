 -----
 JDBC Connection Pools
 -----
 -----
 -----
 
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~   http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.

~~ NOTE: For help with the syntax of this file, see:
~~ http://maven.apache.org/doxia/references/apt-format.html

JDBC Connection Pools

  In the environment JEE resources tab, you have a "JDBC Connection Pools" tab.

  This tab allows you to configure the JDBC connection pools that will be deployed into the JEE application server given in the "scope" checkbox.

[/images/env_jdbc_connection_pools.png]

  On each JDBC connection pool, you can:

  * copy the JDBC connection pool to be pasted into another connection pool 

  * enable (light on) or disable (light off) the JDBC connection pool. If disabled, the JDBC connection pool won't be part of the update process.

  * set update blocker (green puzzle piece) or not update blocker (grey puzzle piece)

  * check the current status of the JDBC connection pool (if deployed and up to date in the JEE application server)

  * launch the JDBC connection pool update

  * delete the JDBC connection pool

  To add a new JDBC connection pool, you have to choose the scope and click on "Add JDBC Connection Pool". In the same way, you can edit a JDBC connection pool by clicking on the connection pool name. 

  The scope is the target JEE application server.

  You will have a new "JDBC Connection Pool" window.

[/images/env_connection_pool_general.png]

  The "General" tab defines general information about the JDBC connection pool:

  * Name: it's the name of the JDBC connection pool.

  * Active: this flag defines if the JDBC connection pool is part of an update or not.

  * Update blocker: if true, if the update of this JDBC connection pool fails, the whole update process will failed and stopped, else, the whole update process will just log a warning and the process will continue.

[/images/env_connection_pool_driver.png]

  The "Driver" tab allows you to define the JDBC driver information for the connection pool:

  * JDBC driver: it's the JDBC driver used by this connection pool.

  * JDBC helper classname: this configuration is specific to WebSphere application server. If you are not using WebSphere application server, you can let this box empty. Else choose the helper classname corresponding to your database.

  * Classpath: it's a path containing the JDBC driver, for instance /usr/lib/jdbc/ojdbc.jar.

[/images/env_connection_pool_database.png]

  The "Database" tab allows you to define the database connection information:

  * JDBC URL: it's the JDBC URL to connect to the database, for instance jdbc:oracle:thin:@hostname:1521:database for an Oracle database.

  * User: the user name used to connect to the database.

  * Password: the password used to connect to the database.

  * Confirm password: repeat the previous password to confirm.

[/images/env_connection_pool_capacity.png]

  The "Capacity" tab allows you to define the capacity of the JDBC connection pool:

  * Initial: it's the number of connection pre-establish when creating the connection pool.

  * Maximal: it's the maximum number of connection that the pool will contain.

  * Increment: it's the number of connection to pre-establish when increasing the pool capacity.
